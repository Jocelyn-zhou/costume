<?phpheader("Access-Control-Allow-Origin: *");Header("Access-Control-Allow-Methods: POST, GET, OPTIONS, PUT, DELETE");include_once('../include/config.php');include_once('../include/basehandler.card.php');switch ($baseHeader['api_type']){    case 'test':Test();break;    case 'register':Register();break;//注册    case 'login':Login();break;//登录    case 'passforget':PassForget();break;//忘记密码    case 'integraladd':IntegralAdd();break;//积分添加    case 'integrallist':IntegralList();break;//积分列表    case 'integralinfo':IntegralInfo();break;//积分详情    case 'cardadd':CardAdd();break;//会员信息添加    case 'cardinfo':CardInfo();break;//会员信息详情    case 'cardupdate':CardUpdate();break;//会员信息修改    case 'cardlist':CardList();break;//会员信息列表    case 'cardstate':CardState();break;//会员信息删除    case 'cardids':CardIds();break;//会员卡号集合    default:exit('请勿非法请求');break;}function CardIds(){    $CardModel = Common_IncludeModel('CardModel', 'card');    $list = $CardModel->IdList();    output_json($list);}function CardState(){    $c_id = RequestString('c_id');    if (empty($c_id))output_json_error('id不得为空',1);    $CardModel = Common_IncludeModel('CardModel', 'card');    $c_update = date('Y-m-d H:i:s');    $result = $CardModel->Update(array('c_state'=>3,'c_update'=>$c_update),array('c_id'=>$c_id));    output_json(array('data' => array('result' => $result)), $result ? '删除成功' : '删除失败', $result ? 0 : 1);}function CardList(){    $page = RequestString('page',1);    $count = RequestString('count',20);    $keyname = RequestString('keyname');//关键字    $CardModel = Common_IncludeModel('CardModel', 'card');    $list = $CardModel->Pages($page,$count,$keyname);    output_json($list);}function CardUpdate(){    $c_id = RequestString('c_id');    $c_number = RequestString('c_number');    $c_name = RequestString('c_name');    $c_tel = RequestString('c_tel');    if (empty($c_id))output_json_error('id不得为空',1);    if (empty($c_number))output_json_error('会员卡ID不得为空',1);    $CardModel = Common_IncludeModel('CardModel', 'card');    $info = $CardModel->Get(array('c_id'));    if ($info['c_number'] == $c_number && $info['c_name']==$c_name && $info['c_tel']==$c_tel)output_json_error('数据未修改',1);    $c_update = date('Y-m-d H:i:s');    $result = $CardModel->Update(array('c_number'=>$c_number,'c_name'=>$c_name,'c_tel'=>$c_tel,'c_update'=>$c_update),array('c_id'=>$c_id));    output_json(array('data' => array('result' => $result)), $result ? '修改成功' : '修改失败', $result ? 0 : 1);}function CardInfo(){    $c_id = RequestString('c_id');    if (empty($c_id))output_json_error('id不得为空',1);    $CardModel = Common_IncludeModel('CardModel', 'card');    $info = $CardModel->Get(array('c_id'));    output_json($info);}function CardAdd(){    $c_number = RequestString('c_number');    $c_name = RequestString('c_name');    $c_tel = RequestString('c_tel');    if (empty($c_number))output_json_error('会员卡ID不得为空',1);    $CardModel = Common_IncludeModel('CardModel', 'card');    $id = $CardModel->Create(array('c_number'=>$c_number,'c_name'=>$c_name,'c_tel'=>$c_tel));    output_json(array('data' => $id), $id > 0 ? '添加成功' : '添加败', $id ? 0 : 1);}function IntegralInfo(){    $i_id = RequestString('i_id');    if (empty($i_id))output_json_error('id不得为空',1);    $IntegralModel = Common_IncludeModel('IntegralModel','card');    $CardModel = Common_IncludeModel('CardModel', 'card');    $info = $IntegralModel->Get(array('i_id'=>$i_id));    if ($info){        if ($info['c_id']){            $card = $CardModel->Get(array('c_id'=>$info['c_id']));            $info['c_name'] = $card['c_name'];//会员用户名            $info['c_number'] = $card['c_number'];//会员用户名        }    }    output_json($info);}function IntegralList(){    $page = RequestString('page',1);    $count = RequestString('count',20);    $keyname = RequestString('keyname');//关键字    $where = array();    $IntegralModel = Common_IncludeModel('IntegralModel','card');    $CardModel = Common_IncludeModel('CardModel', 'card');    if ($keyname){        $c_id = '';        $ids = $CardModel->IdsByKey($keyname);        if ($ids){            foreach ($ids as $k=>$v){                $c_id[] = $v['c_id'];            }        }        if (!empty($c_id)){            $c_ids = implode($c_id,',');            if ($c_ids) $where['c_id'] = $c_ids;        }    }    $list = $IntegralModel->BackPagesDone($page,$count,$where);    if ($list[1]){        foreach ($list[1] as $k=>$v){            $model = $CardModel->Get(array('c_id'=>$v['c_id']));            $list[1][$k]['c_name'] = $model['c_name'];            $list[1][$k]['c_number'] = $model['c_number'];            $list[1][$k]['c_tel'] = $model['c_tel'];        }    }    output_json($list);}function IntegralAdd(){    global $baseHeader;    $sessionname='jsy_user'.$baseHeader['member'];    $login_user = $_SESSION[$sessionname];//获取当前登录用户信息    $user_id = $login_user['user_id'];    $c_id = RequestString('c_id');    $code = RequestString('code');//操作码 1增加 2减少    $i_val = RequestString('i_val');    $i_note = RequestString('i_note');    if (empty($c_id))output_json_error('会员id不得为空',1);    if (empty($i_val))output_json_error('积分不得为空',1);    if (empty($i_note))output_json_error('备注不得为空',1);    $IntegralModel = Common_IncludeModel('IntegralModel','card');    $i_state = 1;//审核通过    if ($code==2){        $i_val = 0 - $i_val;    }    $arr = array(        'c_id' => $c_id,        'i_val' => $i_val,        'i_note' => $i_note,        'user_id' => $user_id,        'i_state' => $i_state,        'i_type'=>3//消费积分    );    $id = $IntegralModel->Create($arr);    if ($id){//更新会员总积分        $CardModel = Common_IncludeModel('CardModel', 'card');        $allval = $IntegralModel->AllVal($c_id);        $CardModel->Update(array('c_val'=>$allval['val']),array('c_id'=>$c_id));    }    output_json(array('data' => $id), $id > 0 ? '添加成功' : '添加败', $id ? 0 : 1);}function PassForget(){    $reg_name=RequestString('reg_name');    $reg_password=RequestString('reg_password');    if(empty($reg_name)||empty($reg_password))output_json_error('参数不完整');    $RegisterModel =Common_IncludeModel('RegisterModel','card');    $model=array();    if($reg_name){        $model=$RegisterModel->Get(array('reg_type'=>1,'reg_name'=>$reg_name));    }    if($model==null)output_json_error('暂无此账号信息',-1);    $msg='';    $istrue=false;    switch ($model['reg_state']) {        case 0:$msg='您的账户正处审核阶段，请稍后再尝试';break;        case 1:{            $istrue=$RegisterModel->Update(array('reg_password'=>$reg_password),array('reg_id'=>$model['reg_id']));            $msg=$istrue?'修改成功':'服务器繁忙请稍后再尝试';        };break;        case 2:$msg='您的账户审核失败，请联系我们的客服';break;        default: $msg = '账户不存在，请核实后尝试'; break;    }    output_json('',$msg,$istrue?0:1);}function Login(){    global $baseHeader;    $reg_name = RequestString('reg_name');    $reg_password = RequestString('reg_password');    if (empty($reg_name)) output_json_error("请填写账号", 1);    if (empty($reg_password)) output_json_error("请填写密码", 1);    $RegisterModel = Common_IncludeModel('RegisterModel', 'card');    $UsersModel = Common_IncludeModel('UsersModel', 'card');    $model_reg = $RegisterModel->GetloginModel(0, $reg_name);    if ($model_reg == null) output_json_error("该账号不存在,请重新填写", 1);    if ($model_reg['reg_password'] != md5($reg_password)) output_json_error("密码错误,请重新填写", 1);    $msg = '';    $model_login = array();    switch ($model_reg['reg_state']) {        case 0:            $msg = '您的账户正处审核阶段，请稍后再尝试登录';            break;        case 1:            $msg = '登录成功';            $istrue = true;            $model_user = $UsersModel->Get(array('user_state' => 1, 'reg_id' => $model_reg['reg_id']));            if ($model_user == null) {                $msg = '该账号不存在，请注册后再尝试登录';                $RegisterModel->Delete(array('reg_id' => $model_reg['reg_id']));                $istrue = false;                break;            }            $UsersModel->Update(array(                'access_token' => SetAccessToken(),                'access_token_validity' => date('Y-m-d H:i:s')), array('user_id' => $model_user['user_id']));            $LoginLogModel = Common_IncludeModel('LoginLogModel', 'card');            $ip = GetIp();            $LoginLogModel->Create(array(                'login_type' => 0,                'm_id' => $model_user['user_id'],                'login_ip' => $ip,                'login_address' => GetIpLookup($ip),                'login_terminal' => $baseHeader['terminal']            ));            $model_login = GetMember($model_user['user_id']);            $_SESSION['card_user' . $model_user['user_id']] = $model_login;            //获取用户可访问的菜单//            $MenuPermissionModel = Common_IncludeModel('MenuPermissionModel', 'card');//            if ($model_user['rg_id'] != 10000) {//                $MenuPermissionGroupRelationModel = Common_IncludeModel('MenuPermissionGroupRelationModel', 'card');//                $menuList = $MenuPermissionGroupRelationModel->Lists(array('rg_id' => $model_user['rg_id']));//                foreach ($menuList as $l) {//                    $userMenuIds[] = $l['mp_id'];//                }//            }            //获取后台配置的所有菜单//            $menuparent = $MenuPermissionModel->MenuParentList();//            $menu = array();//            if (!empty($menuparent)) {//                foreach ($menuparent as $k => $v) {//                    //获取二级菜单//                    $secondMenu = $MenuPermissionModel->MenuParentList($v['mp_id']);//                    if ($secondMenu) {//                        //循环二级菜单，将拥有相同分组名称的菜单合并成一个数组//                        foreach ($secondMenu as $l) {//                            //没有分组名称的二级菜单将不会显示//                            if ($l['mp_group']) {//                                //超级管理员获取全部菜单，普通用户获取指定菜单//                                if ($model_user['rg_id'] == 10000 || in_array($l['mp_id'], $userMenuIds)) {//                                    if (!isset($menu[$k])) {//                                        $menu[$k] = $v;//                                    }//                                    $menu[$k]['group'][$l['mp_group']][] = $l;//                                }//                            }//                        }//                    }//                }//            }            break;        case 2:            $msg = '您的账户审核失败，请联系我们的客服';            break;        default:            $msg = '账户不存在，请核实后再次登录';            break;    }    if (isset($menu)){        output_json(array('member' => $model_login, 'menu' => array_values($menu)), $msg, $istrue ? 0 : 1);    }else{        output_json(array('member' => $model_login), $msg, $istrue ? 0 : 1);    }}function Register(){    $reg_name = RequestString('reg_name');    $reg_password = RequestString('reg_password');    $reg_nickname = RequestString('reg_nickname');    $rg_id = RequestInt('rg_id');//用户所属角色分组id    $UserPermissionGroupModel = Common_IncludeModel('RoleGroupModel', 'card');    $pergroup = $UserPermissionGroupModel->Get(array('rg_id' => $rg_id));    if (empty($pergroup)) output_json_error('用户所属角色分组不存在');    if (empty($reg_name) || empty($reg_password) || empty($reg_nickname)) output_json_error("信息不完整");    $RegisterModel = Common_IncludeModel('RegisterModel', 'card');    $UsersModel = Common_IncludeModel('UsersModel', 'card');    $model_reg = $RegisterModel->GetloginModel(0, $reg_name);    if (!empty($model_reg)) output_json_error("该账号已存在,请重新填写");    $reg_id = $RegisterModel->Create(array('reg_type' => 0, 'reg_name' => $reg_name, 'reg_password' => md5($reg_password)));    $user_id = 0;    if ($reg_id > 0)        $user_id = $UsersModel->Create(array('reg_id' => $reg_id, 'user_name' => $reg_nickname));    if ($user_id > 0) {        $msg = "添加后台账号：注册ID为" . $reg_id;//        backlog($msg, $reg_id);    }    output_json(array('data' => $user_id), $user_id > 0 ? '注册成功' : '注册失败', $user_id ? 0 : 1);}function PassUpdate(){    global $baseMember;    $reg_password=RequestString('reg_password');    $reg_oldpassword=RequestString('reg_oldpassword');    if(empty($reg_password)||empty($reg_oldpassword))output_json_error('参数不完整');    //echo $reg_name .'+'. $baseMember['reg_name'];    if($reg_oldpassword!=$baseMember['reg_password'])output_json_error('旧密码输入错误');    $RegisterModel =Common_IncludeModel('RegisterModel',1);    $istrue=$RegisterModel->Update(array('reg_password'=>$reg_password),array('reg_id'=>$baseMember['reg_id']));    output_json('',$istrue?'修改成功':'修改失败,请稍后再试',$istrue?0:1);}function GetMember($user_id){    $UsersModel = Common_IncludeModel('UsersModel', 'card');    $model = $UsersModel->Get(array('user_id' => $user_id));    return $model;}